if
	file_getprop("/tmp/aroma-data/menu.prop","selected") == "1"
	then
		ui_print("Installing SuperMan-Rom for SM-G930F/G935F");

assert(getprop("ro.product.device") == "hero2lte" || getprop("ro.build.product") == "hero2lte" || getprop("ro.product.name") == "hero2lte" ||
	getprop("ro.product.device") == "herolte" || getprop("ro.build.product") == "herolte" || getprop("ro.product.name") == "herolte" ||
	abort("This package is for \"hero2lte,herolte\" devices; this is a \"" + getprop("ro.product.device") + "\"."););
ifelse(is_mounted("/system"), unmount("/system"));
ifelse(is_mounted("/data"), unmount("/data"));
ifelse(is_mounted("/cache"), unmount("/cache"));
ifelse(is_mounted("/preload"), unmount("/preload"));
ifelse(is_mounted("/efs"), unmount("/efs"));
show_progress(1.000000, 0);
ui_print(" ");
ui_print(" ");
ui_print(" ");
ui_print("SuperMan-Rom Installer V2.2");
ui_print(" ");
ui_print(" ");
ui_print(" ");
ui_print(" ");
ui_print(" ");
ui_print("Formatting system...");
ui_print(" ");
format("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/SYSTEM", "0", "/system");
set_progress(0.100000);
ui_print(" ");
ui_print("Mounting Partitions");
ui_print(" ");
mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/SYSTEM", "/system");
mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/USERDATA", "/data");
mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/CACHE", "/cache");
mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/HIDDEN", "/preload");
mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/EFS", "/efs");
set_progress(0.200000);
#-- Format Options
if
	file_getprop("/tmp/aroma/wipe.prop","wipe") == "full"
	then
		ui_print("Full wipe...");
		delete_recursive("/system");
		delete_recursive("/cache");
		package_extract_file("scripts/DeleteDataWithoutMedia.sh", "/tmp/DeleteDataWithoutMedia.sh"); 
		set_perm(0, 0, 0777, "/tmp/DeleteDataWithoutMedia.sh");
		run_program("/sbin/busybox", "sh", "/tmp/DeleteDataWithoutMedia.sh");
		delete_recursive("/magisk");
		delete_recursive("/supersu");
		delete_recursive("/su");
		set_progress(0.250000);
endif;	
if
	file_getprop("/tmp/aroma/wipe.prop","wipe") == "clean"
	then
		ui_print("Clean install...");
		delete_recursive("/system");
		delete_recursive("/cache");
		delete_recursive("/data");
		delete_recursive("/magisk");
		delete_recursive("/supersu");
		delete_recursive("/su");
		set_progress(0.250000);
endif;
if
	file_getprop("/tmp/aroma/wipe.prop","wipe") == "dirty"
	then
		ui_print("Dirty flash...");
		delete_recursive("/system");
		delete_recursive("/cache");
		set_progress(0.250000);
endif;
ui_print("Extracting system...");
ui_print(" ");
set_progress(0.275000);
package_extract_dir("system", "/system");
set_progress(0.300000);
#-- CSC
if
	file_getprop("/tmp/aroma/csc.prop","CSC") == "All"
	then
		ui_print("Installing All Multi-CSC...");
		package_extract_dir("superman/csc/system/csc", "/system/csc");
endif;
if
	file_getprop("/tmp/aroma/csc.prop","CSC") == "BTU"
	then
		ui_print("Installing BTU CSC...");
		package_extract_dir("superman/csc/system/csc/BTU/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/csc.prop","CSC") == "CPW"
	then
		ui_print("Installing CPW CSC...");
		package_extract_dir("superman/csc/system/csc/CPW/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/csc.prop","CSC") == "DBT"
	then
		ui_print("Installing DBT CSC...");
		package_extract_dir("superman/csc/system/csc/DBT/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/csc.prop","CSC") == "ITV"
	then
		ui_print("Installing ITV CSC...");
		package_extract_dir("superman/csc/system/csc/ITV/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/csc.prop","CSC") == "KOR"
	then
		ui_print("Installing KOR CSC...");
		package_extract_dir("superman/csc/system/csc/KOR/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/csc.prop","CSC") == "NEE"
	then
		ui_print("Installing NEE CSC...");
		package_extract_dir("superman/csc/system/csc/NEE/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/csc.prop","CSC") == "XEF"
	then
		ui_print("Installing XEF CSC...");
		package_extract_dir("superman/csc/system/csc/XEF/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/csc.prop","CSC") == "XEO"
	then
		ui_print("Installing XEO CSC...");
		package_extract_dir("superman/csc/system/csc/XEO/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/csc.prop","CSC") == "XEU"
	then
		ui_print("Installing XEU CSC...");
		package_extract_dir("superman/csc/system/csc/XEU/system", "/system");
endif;
#-- Variants
ifelse(
	is_substring("G930", getprop("ro.boot.bootloader")),
		(
			ui_print("SM-G930F variant...");
			package_extract_dir("superman/variants/SM-G930F/system", "/system");
			set_progress(0.350000);
		),
		(
			ui_print("SM-G935F variant...");
			package_extract_dir("superman/variants/SM-G935F/system", "/system");
			set_progress(0.350000);
		)
);
#-- Camera Mod
if
	file_getprop("/tmp/aroma/camera.prop","camera") == "stock"
	then
		ui_print("Stock Camera...");
		package_extract_dir("superman/camera/stock", "/system");
endif;
if
	file_getprop("/tmp/aroma/camera.prop","camera") == "modded"
	then
		ui_print("Modded Camera...");
		package_extract_dir("superman/camera/modded", "/system");
endif;
#-- Emoji
if
	file_getprop("/tmp/aroma/emoji.prop","emoji") == "stock"
	then
		ui_print("Installing stock emoji...");
		package_extract_dir("superman/emoji/stock/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/emoji.prop","emoji") == "ios"
	then
		ui_print("Installing IOS emoji...");
		package_extract_dir("superman/emoji/IOS/system", "/system");
endif;
#-- SystemUI
if
	file_getprop("/tmp/aroma/mods.prop","systemUI") == "stock"
	then
		ui_print("Installing stock SystemUI...");
		package_extract_dir("superman/systemui/stock", "/system/priv-app");
endif;
ifelse(
	is_substring("G930", getprop("ro.boot.bootloader")),
		(
			if
				file_getprop("/tmp/aroma/mods.prop","systemUI") == "modded"
				then
					ui_print("Installing modded SystemUI...");
					package_extract_dir("superman/systemui/modded/s7", "/system/priv-app");
					package_extract_dir("superman/systemui/minitfiles", "/system/priv-app");
			endif;
		),
		(
			if
				file_getprop("/tmp/aroma/mods.prop","systemUI") == "modded"
				then
					ui_print("Installing modded SystemUI...");
					package_extract_dir("superman/systemui/modded/s7e", "/system/priv-app");
					package_extract_dir("superman/systemui/minitfiles", "/system/priv-app");
			endif;
		)
);
#-- Settings
if
	file_getprop("/tmp/aroma/mods.prop","framework") == "disabled"
	then
		ui_print("Disabling ambient display...");
		package_extract_dir("superman/framework/disabledambient", "/system/framework");
endif;
if
	file_getprop("/tmp/aroma/mods.prop","framework") == "ambient"
	then
		ui_print("Installing ambient display...");
		package_extract_dir("superman/framework/ambient", "/system/framework");
endif;
#-- Settings
if
	file_getprop("/tmp/aroma/mods.prop","settings") == "modded"
	then
		ui_print("Installing modded settings...");
		package_extract_dir("superman/settings/modded", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/mods.prop","settings") == "stock"
	then
		ui_print("Installing stock settings...");
		package_extract_dir("superman/settings/stock", "/system/priv-app");
endif;
#-- Launcher
if
	file_getprop("/tmp/aroma/launcher.prop","launcher") == "stock"
	then
		ui_print("Installing stock launcher...");
		package_extract_dir("superman/launcher/stock", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/launcher.prop","launcher") == "modded"
	then
		ui_print("Installing modded launcher...");
		package_extract_dir("superman/launcher/modded", "/system/priv-app");
endif;
#-- Animation
if
	file_getprop("/tmp/aroma/bootanim.prop","anim") == "stock"
	then
		ui_print("Installing stock animation...");
		package_extract_dir("superman/animation/stock", "/system/media");
endif;
if
	file_getprop("/tmp/aroma/bootanim.prop","anim") == "super_black"
	then
		ui_print("Installing black superman animation...");
		package_extract_dir("superman/animation/superman_black", "/system/media");
endif;
if
	file_getprop("/tmp/aroma/bootanim.prop","anim") == "super_black3d"
	then
		ui_print("Installing black superman 3D animation...");
		package_extract_dir("superman/animation/superman_black_3d", "/system/media");
endif;
if
	file_getprop("/tmp/aroma/bootanim.prop","anim") == "super_white"
	then
		ui_print("Installing white superman animation...");
		package_extract_dir("superman/animation/superman_white", "/system/media");
endif;
if
	file_getprop("/tmp/aroma/bootanim.prop","anim") == "super_white3d"
	then
		ui_print("Installing white superman 3D animation...");
		package_extract_dir("superman/animation/superman_white_3d", "/system/media");
endif;
#-- Model
ui_print(" ");
ui_print("Setting right model number to csc and build.prop");
ui_print(" ");
package_extract_file("scripts/model.sh", "/tmp/model.sh");
set_perm(0, 0, 0777, "/tmp/model.sh");
run_program("/tmp/model.sh");
set_progress(0.375000);
ui_print(" ");
ui_print("Backing Up EFS...");
ui_print(" ");
package_extract_file("scripts/efs_backup.sh", "/tmp/efs_backup.sh");
set_perm(0, 0, 0777, "/tmp/efs_backup.sh");
run_program("/tmp/efs_backup.sh");
set_progress(0.380000);
ui_print(" ");
ui_print("Applying build.prop tweaks...");
ui_print(" ");
package_extract_file("scripts/build.prop_tweaks.sh", "/tmp/build.prop_tweaks.sh");
set_perm(0, 0, 0777, "/tmp/build.prop_tweaks.sh");
run_program("/tmp/build.prop_tweaks.sh");
set_progress(0.390000);
#-- Init.d
if
	file_getprop("/tmp/aroma/buildtweaks.prop","wakelock") == "1"
	then
		ui_print("Installing init.d wakelock tweaks...");
		package_extract_dir("superman/init.d/wakelock", "/system/etc/init.d");
endif;
if
	file_getprop("/tmp/aroma/buildtweaks.prop","zipalign") == "1"
	then
		ui_print("Installing init.d zipalign tweaks...");
		package_extract_dir("superman/init.d/zip", "/system/etc/init.d");
endif;
if
	file_getprop("/tmp/aroma/buildtweaks.prop","vm") == "1"
	then
		ui_print("Installing init.d VM tweaks...");
		package_extract_dir("superman/init.d/vm", "/system/etc/init.d");
endif;
if
	file_getprop("/tmp/aroma/buildtweaks.prop","sqlite") == "1"
	then
		ui_print("Installing init.d sqlite tweaks...");
		package_extract_dir("superman/init.d/sqlite", "/system/etc/init.d");
endif;
if
	file_getprop("/tmp/aroma/buildtweaks.prop","net") == "1"
	then
		ui_print("Installing init.d network tweaks...");
		package_extract_dir("superman/init.d/net", "/system/etc/init.d");
endif;
#-- Adblocker
if
	file_getprop("/tmp/aroma/adaway.prop","adblocker") == "enable"
	then
		ui_print("Enable adblocking...");
		package_extract_dir("superman/adaway/enable", "/system/etc");
endif;
if
	file_getprop("/tmp/aroma/adaway.prop","adblocker") == "disable"
	then
		ui_print("Disable adblocking...");
		package_extract_dir("superman/adaway/disable", "/system/etc");
endif;
#-- Sound Mod
if
	file_getprop("/tmp/aroma/sound.prop","sound") == "mod"
	then
		ui_print("Installing sound mod V19...");
		package_extract_dir("superman/sound/mod/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/sound.prop","sound") == "nothing"
	then
		ui_print("Installing stock sound...");
		package_extract_dir("superman/sound/stock/system", "/system");
endif;
#-- Samsung Bloat
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.1") == "1"
	then
		ui_print("Installing Allshare...");
		package_extract_dir("superman/debloat/Allshare", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.2") == "1"
	then
		ui_print("Installing ANT...");
		package_extract_dir("superman/debloat/ANT", "/system");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.3") == "1"
	then
		ui_print("Installing Memo...");
		package_extract_dir("superman/debloat/Memo", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.4") == "1"
	then
		ui_print("Installing Mirrorlink...");
		package_extract_dir("superman/debloat/MirrorLink", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.5") == "1"
	then
		ui_print("Installing SBrowser...");
		package_extract_dir("superman/debloat/SBrowser", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.6") == "1"
	then
		ui_print("Installing SPlanner...");
		package_extract_dir("superman/debloat/SPlanner", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.7") == "1"
	then
		ui_print("Installing VideoEditor...");
		package_extract_dir("superman/debloat/VideoEditor", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.8") == "1"
	then
		ui_print("Installing Weather...");
		package_extract_dir("superman/debloat/Weather", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.9") == "1"
	then
		ui_print("Installing Calculator...");
		package_extract_dir("superman/debloat/Calculator", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.10") == "1"
	then
		ui_print("Installing Email...");
		package_extract_dir("superman/debloat/Email", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.11") == "1"
	then
		ui_print("Installing GalaxyAppStore...");
		package_extract_dir("superman/debloat/GalaxyStore", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.12") == "1"
	then
		ui_print("Installing Gallery...");
		package_extract_dir("superman/debloat/Gallery", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.13") == "1"
	then
		ui_print("Installing GameTools...");
		package_extract_dir("superman/debloat/Game", "/system");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.14") == "1"
	then
		ui_print("Installing MyFiles...");
		package_extract_dir("superman/debloat/MyFiles", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.15") == "1"
	then
		ui_print("Installing Shealth...");
		package_extract_dir("superman/debloat/SHealth", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.16") == "1"
	then
		ui_print("Installing SVoice...");
		package_extract_dir("superman/debloat/SVoice", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.17") == "1"
	then
		ui_print("Installing Themestore...");
		package_extract_dir("superman/debloat/Themestore", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.18") == "1"
	then
		ui_print("Installing VoiceNote...");
		package_extract_dir("superman/debloat/VoiceNote", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.19") == "1"
	then
		ui_print("Installing SmartSwitch...");
		package_extract_dir("superman/debloat/SmartSwitch", "/system/preload");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.20") == "1"
	then
		ui_print("Installing Gear S...");
		package_extract_dir("superman/debloat/Gear_S", "/system");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.21") == "1"
	then
		ui_print("Installing Gear VR...");
		package_extract_dir("superman/debloat/Gear_VR", "/system");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.22") == "1"
	then
		ui_print("Installing Excel...");
		package_extract_dir("superman/debloat/Excel", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.23") == "1"
	then
		ui_print("Installing PowerPoint...");
		package_extract_dir("superman/debloat/PowerPoint", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.24") == "1"
	then
		ui_print("Installing Word...");
		package_extract_dir("superman/debloat/Word", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.25") == "1"
	then
		ui_print("Installing Samsung Pay...");
		package_extract_dir("superman/debloat/SamsungPay/system", "/system");
		package_extract_dir("superman/debloat/SamsungPay/data", "/data");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.26") == "1"
	then
		ui_print("Installing Samsung Music App...");
		package_extract_dir("superman/debloat/Samsung_Music", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.27") == "1"
	then
		ui_print("Installing OneDrive...");
		package_extract_dir("superman/debloat/Samsung_OneDrive", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.28") == "1"
	then
		ui_print("Installing Samsung Notes...");
		package_extract_dir("superman/debloat/SamsungNotes", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.29") == "1"
	then
		ui_print("Installing Samsung Video...");
		package_extract_dir("superman/debloat/SamsungVideo", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.30") == "1"
	then
		ui_print("Installing Samsung Gear Viewer...");
		package_extract_dir("superman/debloat/Gear_Viewer", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/samsung.prop","item.1.31") == "1"
	then
		ui_print("Installing Knox...");
		package_extract_dir("superman/debloat/Knox/system", "/system");
		package_extract_dir("superman/debloat/Knox/data", "/data");
endif;
#-- Google Bloat
if
	file_getprop("/tmp/aroma/google.prop","item.1.1") == "1"
	then
		ui_print("Installing Google Now...");
		package_extract_dir("superman/debloat/Google", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.2") == "1"
	then
		ui_print("Installing Google Chrome...");
		package_extract_dir("superman/debloat/Chrome", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.3") == "1"
	then
		ui_print("Installing Google Drive...");
		package_extract_dir("superman/debloat/Drive", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.4") == "1"
	then
		ui_print("Installing Google Gmail...");
		package_extract_dir("superman/debloat/Gmail", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.5") == "1"
	then
		ui_print("Installing Google Hangouts...");
		package_extract_dir("superman/debloat/Hangouts", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.6") == "1"
	then
		ui_print("Installing Google Maps...");
		package_extract_dir("superman/debloat/Maps", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.7") == "1"
	then
		ui_print("Installing Google Music...");
		package_extract_dir("superman/debloat/Music", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.8") == "1"
	then
		ui_print("Installing Google Movies...");
		package_extract_dir("superman/debloat/Videos", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.9") == "1"
	then
		ui_print("Installing Youtube...");
		package_extract_dir("superman/debloat/Youtube", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.10") == "1"
	then
		ui_print("Installing AndroidPay...");
		package_extract_dir("superman/debloat/AndroidPay", "/system/preload");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.11") == "1"
	then
		ui_print("Installing Google Photo...");
		package_extract_dir("superman/debloat/GooglePhoto", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/google.prop","item.1.12") == "1"
	then
		ui_print("Installing Google Assistant...");
		package_extract_dir("superman/debloat/Google_Assistant", "/system/priv-app");
endif;
#-- Other Bloat
if
	file_getprop("/tmp/aroma/others.prop","item.1.1") == "1"
	then
		ui_print("Installing AdAway...");
		package_extract_dir("superman/debloat/AdAway", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.2") == "1"
	then
		ui_print("Installing Better Battery Stats...");
		package_extract_dir("superman/debloat/BetterBatteryStats", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.3") == "1"
	then
		ui_print("Installing CPU-Z...");
		package_extract_dir("superman/debloat/CPU-Z", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.4") == "1"
	then
		ui_print("Installing Firefox...");
		package_extract_dir("superman/debloat/Firefox", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.5") == "1"
	then
		ui_print("Installing GSamBattery...");
		package_extract_dir("superman/debloat/GSamBattery", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.6") == "1"
	then
		ui_print("Installing Greenify...");
		package_extract_dir("superman/debloat/Greenify", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.7") == "1"
	then
		ui_print("Installing Mega...");
		package_extract_dir("superman/debloat/Mega", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.8") == "1"
	then
		ui_print("Installing OneNote App...");
		package_extract_dir("superman/debloat/OneNote", "/system/priv-app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.9") == "1"
	then
		ui_print("Installing OperaMax...");
		package_extract_dir("superman/debloat/OperaMax", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.10") == "1"
	then
		ui_print("Installing OperaMini...");
		package_extract_dir("superman/debloat/OperaMini", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.11") == "1"
	then
		ui_print("Installing PhoneInfo...");
		package_extract_dir("superman/debloat/PhoneInfo", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.12") == "1"
	then
		ui_print("Installing RootExplorer...");
		package_extract_dir("superman/debloat/RootExplorer", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.13") == "1"
	then
		ui_print("Installing SDMaid...");
		package_extract_dir("superman/debloat/SDMaid", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.14") == "1"
	then
		ui_print("Installing Tapatalk...");
		package_extract_dir("superman/debloat/Tapatalk", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.15") == "1"
	then
		ui_print("Installing Terminal...");
		package_extract_dir("superman/debloat/Terminal", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/others.prop","item.1.16") == "1"
	then
		ui_print("Installing TitaniumBackup...");
		package_extract_dir("superman/debloat/TitaniumBackup", "/data/app");
endif;
#-- Social Media bloat
if
	file_getprop("/tmp/aroma/media.prop","item.1.1") == "1"
	then
		ui_print("Installing Facebook...");
		package_extract_dir("superman/debloat/Facebook", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/media.prop","item.1.2") == "1"
	then
		ui_print("Installing Hike...");
		package_extract_dir("superman/debloat/Hike", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/media.prop","item.1.3") == "1"
	then
		ui_print("Installing Instagram...");
		package_extract_dir("superman/debloat/Instagram", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/media.prop","item.1.4") == "1"
	then
		ui_print("Installing Jodel...");
		package_extract_dir("superman/debloat/Jodel", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/media.prop","item.1.5") == "1"
	then
		ui_print("Installing Musically...");
		package_extract_dir("superman/debloat/Musically", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/media.prop","item.1.6") == "1"
	then
		ui_print("Installing Signal...");
		package_extract_dir("superman/debloat/Signal", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/media.prop","item.1.7") == "1"
	then
		ui_print("Installing Skype...");
		package_extract_dir("superman/debloat/Skype", "/system/app");
endif;
if
	file_getprop("/tmp/aroma/media.prop","item.1.8") == "1"
	then
		ui_print("Installing Snapchat...");
		package_extract_dir("superman/debloat/Snapchat", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/media.prop","item.1.9") == "1"
	then
		ui_print("Installing Telegram...");
		package_extract_dir("superman/debloat/Telegram", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/media.prop","item.1.10") == "1"
	then
		ui_print("Installing WhatsApp...");
		package_extract_dir("superman/debloat/WhatsApp", "/system/app");
endif;
#-- Data excraction
ui_print("Extracting data..."); ui_print(" ");
#-- Phh's App
if
	file_getprop("/tmp/aroma/magisk.prop","root") == "phh"
	then
		ui_print("Installing phh's superuser app...");
		package_extract_dir("superman/root/app", "/data/app");
endif;
#-- Busybox App
if
	file_getprop("/tmp/aroma/magisk.prop","busybox") == "yes"
	then
		ui_print("Installing Busybox App...");
		package_extract_dir("superman/busybox/app", "/data/app");
endif;
#-- Magisk App
if
	file_getprop("/tmp/aroma/magisk.prop","magisk") == "yes"
	then
		ui_print("Installing Magisk App...");
		package_extract_dir("superman/magisk/app", "/data/app");
endif;
#-- Kernel App
if
	file_getprop("/tmp/aroma/kernel.prop","synapse") == "1"
	then
		ui_print("Installing Synapse...");
		package_extract_dir("superman/kernel/apps/synapse/app", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/kernel.prop","adiutor") == "1"
	then
		ui_print("Installing Kernel Adiutor...");
		package_extract_dir("superman/kernel/apps/adiutor/app", "/data/app");
endif;
#-- ViperMagisk APK
if
	file_getprop("/tmp/aroma/magisk.prop","v4a") == "yesma"
	then
		package_extract_dir("superman/viper4android/app", "/data/app");
		package_extract_dir("superman/viper4android/etc", "/system/etc");
endif;
set_metadata_recursive("/data/app", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0);
set_progress(0.400000);
ui_print("Creating symlinks...");
ui_print(" ");
symlink("app_process64", "/system/bin/app_process");
symlink("dalvikvm64", "/system/bin/dalvikvm");
symlink("grep", "/system/bin/egrep");
symlink("grep", "/system/bin/fgrep");
symlink("ip6tables", "/system/bin/ip6tables-restore");
symlink("ip6tables", "/system/bin/ip6tables-save");
symlink("iptables", "/system/bin/iptables-restore");
symlink("iptables", "/system/bin/iptables-save");
symlink("libOpenCL.so.1.1", "/system/vendor/lib64/libOpenCL.so.1");
symlink("libOpenCL.so.1.1", "/system/vendor/lib/libOpenCL.so.1");
symlink("libOpenCL.so.1", "/system/vendor/lib64/libOpenCL.so");
symlink("libOpenCL.so.1", "/system/vendor/lib/libOpenCL.so");
symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
symlink("Roboto-Medium.ttf", "/system/fonts/SECRobotoLight-Bold.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/SECRobotoLight-Regular.ttf");
symlink("/system/lib64/libaed.so", "/system/app/AdvSoundDetector2015/lib/arm64/libaed.so");
symlink("/system/lib64/libappfuse_jni.so", "/system/priv-app/MtpDocumentsProvider/lib/arm64/libappfuse_jni.so");
symlink("/system/lib64/libassd.so", "/system/app/SmartcardService/lib/arm64/libassd.so");
symlink("/system/lib64/libdefcontainer_jni.so", "/system/priv-app/DefaultContainerService/lib/arm64/libdefcontainer_jni.so");
symlink("/system/lib64/libfdb.so", "/system/app/AdvSoundDetector2015/lib/arm64/libfdb.so");
symlink("/system/lib64/libjni_pacprocessor.so", "/system/app/PacProcessor/lib/arm64/libjni_pacprocessor.so");
symlink("/system/lib64/libmorpho_panorama_wa_for_viewer.so", "/system/app/Panorama360Viewer/lib/arm64/libmorpho_panorama_wa_for_viewer.so");
symlink("/system/lib64/libmorpho_sensor_fusion_for_viewer.so", "/system/app/Panorama360Viewer/lib/arm64/libmorpho_sensor_fusion_for_viewer.so");
symlink("/system/lib64/libnfc_nci_jni.so", "/system/app/NfcNci/lib/arm64/libnfc_nci_jni.so");
symlink("/system/lib64/libprintspooler_jni7.so", "/system/app/SPrintSpooler7/lib/arm64/libprintspooler_jni7.so");
symlink("/system/lib64/libPSI.so", "/system/app/sveservice/lib/arm64/libPSI.so");
symlink("/system/lib64/librtppayload.so", "/system/app/sveservice/lib/arm64/librtppayload.so");
symlink("/system/lib64/librtp.so", "/system/app/sveservice/lib/arm64/librtp.so");
symlink("/system/lib64/libSamsungBCPP.so", "/system/app/AdvSoundDetector2015/lib/arm64/libSamsungBCPP.so");
symlink("/system/lib64/libsamsung_videoengine_7_0.so", "/system/app/sveservice/lib/arm64/libsamsung_videoengine_7_0.so");
symlink("/system/lib64/libsisosrtp.so", "/system/app/sveservice/lib/arm64/libsisosrtp.so");
symlink("/system/lib64/libsvejni.so", "/system/app/sveservice/lib/arm64/libsvejni.so");
symlink("/system/lib64/libTui.so", "/system/app/TuiService/lib/arm64/libTui.so");
symlink("/system/lib/libasf_fileshareserver.so", "/system/app/AllshareFileShare/lib/arm/libasf_fileshareserver.so");
symlink("/system/lib/libasf_fileshare.so", "/system/app/AllshareFileShare/lib/arm/libasf_fileshare.so");
symlink("/system/lib/libasf_mediashare.so", "/system/app/AllshareMediaShare/lib/arm/libasf_mediashare.so");
symlink("/system/lib/libatomjpeg.so", "/system/priv-app/SelectiveFocusViewer/lib/arm/libatomjpeg.so");
symlink("/system/lib/libbluetooth_jni.so", "/system/app/Bluetooth/lib/arm/libbluetooth_jni.so");
symlink("/system/lib/libcommonpawrapper.so", "/system/app/RootPA/lib/arm/libcommonpawrapper.so");
symlink("/system/lib/libQjpeg.so", "/system/priv-app/SelectiveFocusViewer/lib/arm/libQjpeg.so");
symlink("/system/lib/libsecipx.so", "/system/priv-app/SelectiveFocusViewer/lib/arm/libsecipx.so");
symlink("/system/lib/libsvoicedll.so", "/system/priv-app/SVoice/lib/arm/libsvoicedll.so");
symlink("/system/lib/libsvoicedll.so", "/system/priv-app/SVoicePLM/lib/arm/libsvoicedll.so");
symlink("toolbox", "/system/bin/dd");
symlink("toolbox", "/system/bin/getevent");
symlink("toolbox", "/system/bin/iftop");
symlink("toolbox", "/system/bin/ioctl");
symlink("toolbox", "/system/bin/log");
symlink("toolbox", "/system/bin/nandread");
symlink("toolbox", "/system/bin/newfs_msdos");
symlink("toolbox", "/system/bin/prlimit");
symlink("toolbox", "/system/bin/ps");
symlink("toolbox", "/system/bin/sendevent");
symlink("toolbox", "/system/bin/start");
symlink("toolbox", "/system/bin/stop");
symlink("toolbox", "/system/bin/top");
symlink("toybox", "/system/bin/acpi");
symlink("toybox", "/system/bin/base64");
symlink("toybox", "/system/bin/basename");
symlink("toybox", "/system/bin/blockdev");
symlink("toybox", "/system/bin/bzcat");
symlink("toybox", "/system/bin/cal");
symlink("toybox", "/system/bin/cat");
symlink("toybox", "/system/bin/chcon");
symlink("toybox", "/system/bin/chgrp");
symlink("toybox", "/system/bin/chmod");
symlink("toybox", "/system/bin/chown");
symlink("toybox", "/system/bin/chroot");
symlink("toybox", "/system/bin/cksum");
symlink("toybox", "/system/bin/clear");
symlink("toybox", "/system/bin/cmp");
symlink("toybox", "/system/bin/comm");
symlink("toybox", "/system/bin/cp");
symlink("toybox", "/system/bin/cpio");
symlink("toybox", "/system/bin/cut");
symlink("toybox", "/system/bin/date");
symlink("toybox", "/system/bin/df");
symlink("toybox", "/system/bin/dirname");
symlink("toybox", "/system/bin/dmesg");
symlink("toybox", "/system/bin/dos2unix");
symlink("toybox", "/system/bin/du");
symlink("toybox", "/system/bin/echo");
symlink("toybox", "/system/bin/env");
symlink("toybox", "/system/bin/expand");
symlink("toybox", "/system/bin/expr");
symlink("toybox", "/system/bin/fallocate");
symlink("toybox", "/system/bin/false");
symlink("toybox", "/system/bin/find");
symlink("toybox", "/system/bin/flock");
symlink("toybox", "/system/bin/free");
symlink("toybox", "/system/bin/getenforce");
symlink("toybox", "/system/bin/getprop");
symlink("toybox", "/system/bin/groups");
symlink("toybox", "/system/bin/head");
symlink("toybox", "/system/bin/hostname");
symlink("toybox", "/system/bin/hwclock");
symlink("toybox", "/system/bin/id");
symlink("toybox", "/system/bin/ifconfig");
symlink("toybox", "/system/bin/inotifyd");
symlink("toybox", "/system/bin/insmod");
symlink("toybox", "/system/bin/ionice");
symlink("toybox", "/system/bin/iorenice");
symlink("toybox", "/system/bin/kill");
symlink("toybox", "/system/bin/killall");
symlink("toybox", "/system/bin/ln");
symlink("toybox", "/system/bin/load_policy");
symlink("toybox", "/system/bin/logname");
symlink("toybox", "/system/bin/losetup");
symlink("toybox", "/system/bin/ls");
symlink("toybox", "/system/bin/lsmod");
symlink("toybox", "/system/bin/lsof");
symlink("toybox", "/system/bin/lsusb");
symlink("toybox", "/system/bin/md5sum");
symlink("toybox", "/system/bin/mkdir");
symlink("toybox", "/system/bin/mknod");
symlink("toybox", "/system/bin/mkswap");
symlink("toybox", "/system/bin/mktemp");
symlink("toybox", "/system/bin/modinfo");
symlink("toybox", "/system/bin/more");
symlink("toybox", "/system/bin/mount");
symlink("toybox", "/system/bin/mountpoint");
symlink("toybox", "/system/bin/mv");
symlink("toybox", "/system/bin/netstat");
symlink("toybox", "/system/bin/nice");
symlink("toybox", "/system/bin/nl");
symlink("toybox", "/system/bin/nohup");
symlink("toybox", "/system/bin/od");
symlink("toybox", "/system/bin/paste");
symlink("toybox", "/system/bin/patch");
symlink("toybox", "/system/bin/pgrep");
symlink("toybox", "/system/bin/pidof");
symlink("toybox", "/system/bin/pkill");
symlink("toybox", "/system/bin/pmap");
symlink("toybox", "/system/bin/printenv");
symlink("toybox", "/system/bin/printf");
symlink("toybox", "/system/bin/pwd");
symlink("toybox", "/system/bin/readlink");
symlink("toybox", "/system/bin/realpath");
symlink("toybox", "/system/bin/renice");
symlink("toybox", "/system/bin/restorecon");
symlink("toybox", "/system/bin/rm");
symlink("toybox", "/system/bin/rmdir");
symlink("toybox", "/system/bin/rmmod");
symlink("toybox", "/system/bin/route");
symlink("toybox", "/system/bin/runcon");
symlink("toybox", "/system/bin/sed");
symlink("toybox", "/system/bin/seq");
symlink("toybox", "/system/bin/setenforce");
symlink("toybox", "/system/bin/setprop");
symlink("toybox", "/system/bin/setsid");
symlink("toybox", "/system/bin/sha1sum");
symlink("toybox", "/system/bin/sleep");
symlink("toybox", "/system/bin/sort");
symlink("toybox", "/system/bin/split");
symlink("toybox", "/system/bin/stat");
symlink("toybox", "/system/bin/strings");
symlink("toybox", "/system/bin/swapoff");
symlink("toybox", "/system/bin/swapon");
symlink("toybox", "/system/bin/sync");
symlink("toybox", "/system/bin/sysctl");
symlink("toybox", "/system/bin/tac");
symlink("toybox", "/system/bin/tail");
symlink("toybox", "/system/bin/tar");
symlink("toybox", "/system/bin/taskset");
symlink("toybox", "/system/bin/tee");
symlink("toybox", "/system/bin/time");
symlink("toybox", "/system/bin/timeout");
symlink("toybox", "/system/bin/touch");
symlink("toybox", "/system/bin/tr");
symlink("toybox", "/system/bin/true");
symlink("toybox", "/system/bin/truncate");
symlink("toybox", "/system/bin/tty");
symlink("toybox", "/system/bin/ulimit");
symlink("toybox", "/system/bin/umount");
symlink("toybox", "/system/bin/uname");
symlink("toybox", "/system/bin/uniq");
symlink("toybox", "/system/bin/unix2dos");
symlink("toybox", "/system/bin/uptime");
symlink("toybox", "/system/bin/usleep");
symlink("toybox", "/system/bin/vmstat");
symlink("toybox", "/system/bin/wc");
symlink("toybox", "/system/bin/which");
symlink("toybox", "/system/bin/whoami");
symlink("toybox", "/system/bin/xargs");
symlink("toybox", "/system/bin/xxd");
symlink("toybox", "/system/bin/yes");
symlink("/vendor/lib64/egl/libGLES_mali.so", "/system/vendor/lib64/hw/vulkan.exynos5.so");
symlink("/vendor/lib64/egl/libGLES_mali.so", "/system/vendor/lib64/libOpenCL.so.1.1");
symlink("/vendor/lib/egl/libGLES_mali.so", "/system/vendor/lib/hw/vulkan.exynos5.so");
symlink("/vendor/lib/egl/libGLES_mali.so", "/system/vendor/lib/libOpenCL.so.1.1");
set_progress(0.500000);
ui_print("Setting Permissions...");
ui_print(" ");
set_metadata_recursive("/system", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/addon.d", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/bin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/androidshmservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:androidshmservice_exec:s0");
set_metadata("/system/bin/apaservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:apaservice_exec:s0");
set_metadata("/system/bin/apexserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:apexserver_exec:s0");
set_metadata("/system/bin/app_process", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/app_process32", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/app_process64", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/argosd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:argosd_exec:s0");
set_metadata("/system/bin/at_distributor", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:at_distributor_exec:s0");
set_metadata("/system/bin/atrace", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:atrace_exec:s0");
set_metadata("/system/bin/audioserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:audioserver_exec:s0");
set_metadata("/system/bin/auditd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:auditd_exec:s0");
set_metadata("/system/bin/bintvoutservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bintvoutservice_exec:s0");
set_metadata("/system/bin/blkid", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:blkid_exec:s0");
set_metadata("/system/bin/bootanimation", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootanim_exec:s0");
set_metadata("/system/bin/bootchecker", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootchecker_exec:s0");
set_metadata("/system/bin/bootstat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootstat_exec:s0");
set_metadata("/system/bin/bugreport", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/cameraserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:cameraserver_exec:s0");
set_metadata("/system/bin/cellgeofenced", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:cellgeofenced_exec:s0");
set_metadata("/system/bin/charon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:charon_exec:s0");
set_metadata("/system/bin/clatd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:clatd_exec:s0");
set_metadata("/system/bin/connfwexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:connfwexe_exec:s0");
set_metadata("/system/bin/cs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:cs_exec:s0");
set_metadata("/system/bin/ddexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ddexe_exec:s0");
set_metadata("/system/bin/debuggerd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
set_metadata("/system/bin/debuggerd64", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
set_metadata("/system/bin/dex2oat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dex2oat_exec:s0");
set_metadata("/system/bin/diagexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:diagexe_exec:s0");
set_metadata("/system/bin/dnsmasq", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dnsmasq_exec:s0");
set_metadata("/system/bin/drmserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drmserver_exec:s0");
set_metadata("/system/bin/dumpstate", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dumpstate_exec:s0");
set_metadata("/system/bin/dumpsys", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/e2fsck", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/edmaudit", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:edmaudit_exec:s0");
set_metadata("/system/bin/epmlogd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:epmlogd_exec:s0");
set_metadata("/system/bin/eris", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:eris_exec:s0");
set_metadata("/system/bin/fingerprintd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fingerprintd_exec:s0");
set_metadata("/system/bin/fsck.exfat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/fsck.f2fs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/fsck_msdos", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/gatekeeperd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:gatekeeperd_exec:s0");
set_metadata("/system/bin/gpsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:gpsd_exec:s0");
set_metadata("/system/bin/hostapd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hostapd_exec:s0");
set_metadata("/system/bin/icd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:icd_exec:s0");
set_metadata("/system/bin/idmap", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:idmap_exec:s0");
set_metadata("/system/bin/imsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:imsd_exec:s0");
set_metadata("/system/bin/iod", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:iod_exec:s0");
set_metadata("/system/bin/installd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:installd_exec:s0");
set_metadata("/system/bin/install-recovery.sh", "uid", 0, "gid", 0, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:install_recovery_exec:s0");
set_metadata("/system/bin/insthk", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:insthk_exec:s0");
set_metadata("/system/bin/ip6tables", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/iptables", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/jackservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:jackservice_exec:s0");
set_metadata("/system/bin/keystore", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:keystore_exec:s0");
set_metadata("/system/bin/lhd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lhd_exec:s0");
set_metadata("/system/bin/lmkd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lmkd_exec:s0");
set_metadata("/system/bin/logcat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:logcat_exec:s0");
set_metadata("/system/bin/logd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:logd_exec:s0");
set_metadata("/system/bin/logwrapper", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/lpm", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lpm_exec:s0");
set_metadata("/system/bin/macloader", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:macloader_exec:s0");
set_metadata("/system/bin/make_ext4fs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/mcDriverDaemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mobicoredaemon_exec:s0");
set_metadata("/system/bin/mdnsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mdnsd_exec:s0");
set_metadata("/system/bin/mediacodec", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediacodec_exec:s0");
set_metadata("/system/bin/mediadrmserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediadrmserver_exec:s0");
set_metadata("/system/bin/mediaextractor", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediaextractor_exec:s0");
set_metadata("/system/bin/mediaserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediaserver_exec:s0");
set_metadata("/system/bin/mfgloader", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mfgloader_exec:s0");
set_metadata("/system/bin/mkfs.exfat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/mtpd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mtp_exec:s0");
set_metadata("/system/bin/ndc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/netd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:netd_exec:s0");
set_metadata("/system/bin/otp_server", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:otp_server_exec:s0");
set_metadata("/system/bin/patchoat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dex2oat_exec:s0");
set_metadata("/system/bin/ping", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/pppd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ppp_exec:s0");
set_metadata("/system/bin/prepare_param.sh", "uid", 0, "gid", 2000, "mode", 0500, "capabilities", 0x0, "selabel", "u:object_r:prepare_param_sh_file:s0");
set_metadata("/system/bin/profman", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:profman_exec:s0");
set_metadata("/system/bin/racoon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:racoon_exec:s0");
set_metadata("/system/bin/redsocks", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:redsocks_exec:s0");
set_metadata("/system/bin/resetreason", "uid", 1000, "gid", 1000, "mode", 0710, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/rild", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rild_exec:s0");
set_metadata("/system/bin/rpmbd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rpmbd_exec:s0");
set_metadata("/system/bin/rtc_log.sh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rtc_log_sh_file:s0");
set_metadata("/system/bin/run-as", "uid", 0, "gid", 2000, "mode", 0750, "capabilities", 0xc0, "selabel", "u:object_r:runas_exec:s0");
set_metadata("/system/bin/samsungpowersoundplay", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:samsungpowersoundplay_exec:s0");
set_metadata("/system/bin/scs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:scs_exec:s0");
set_metadata("/system/bin/sdcard", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdcardd_exec:s0");
set_metadata("/system/bin/sdp_cryptod", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdp_cryptod_exec:s0");
set_metadata("/system/bin/secure_storage_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:secure_storage_exec:s0");
set_metadata("/system/bin/sem_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sem_exec:s0");
set_metadata("/system/bin/sensorhubservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sensorhubservice_exec:s0");
set_metadata("/system/bin/servicemanager", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:servicemanager_exec:s0");
set_metadata("/system/bin/sgdisk", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sgdisk_exec:s0");
set_metadata("/system/bin/sh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:shell_exec:s0");
set_metadata("/system/bin/smdexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:smdexe_exec:s0");
set_metadata("/system/bin/ss_conn_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ss_conn_daemon_exec:s0");
set_metadata("/system/bin/ss_kbservice_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ss_kbservice_daemon_exec:s0");
set_metadata("/system/bin/surfaceflinger", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:surfaceflinger_exec:s0");
set_metadata("/system/bin/tc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/tima_dump_log", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tima_dump_exec:s0");
set_metadata("/system/bin/tlc_server", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tlc_server_exec:s0");
set_metadata("/system/bin/toolbox", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:toolbox_exec:s0");
set_metadata("/system/bin/toybox", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:toolbox_exec:s0");
set_metadata("/system/bin/tzdatacheck", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tzdatacheck_exec:s0");
set_metadata("/system/bin/uncrypt", "uid", 0, "gid", 0, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:uncrypt_exec:s0");
set_metadata("/system/bin/vdc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vdc_exec:s0");
set_metadata("/system/bin/vold", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vold_exec:s0");
set_metadata("/system/bin/wlandutservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wlandutservice_exec:s0");
set_metadata("/system/bin/wpa_supplicant", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wpa_exec:s0");
set_metadata("/system/etc/bluetooth/bt_did.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth/bt_stack.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/dhcpcd", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/recovery-from-boot.p", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/event-log-tags", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/firmware", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/firmware/wlan", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/hostapd", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.goldfish.sh", "uid", 0, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.sec.boot.sh", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:sec-sh_exec:s0");
set_metadata_recursive("/system/etc/ppp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0555, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/ssh", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/lib", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/bin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/itson", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/lib/drm", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/lib/hw", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/lib/mediadrm", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/mediadrm/libdrmclearkeyplugin.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/mediadrm/libwvdrmengine.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/lib/qcdrm", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/lib/qcdrm/playready", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/lib/qcdrm/playready/lib/drm", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/pittpatt/models/recognition", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/xbin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_progress(0.600000);
ui_print(" ");
ui_print("Extracting boot image...");
ui_print(" ");
#-- Kernel/Recovery Selection
ifelse(
	is_substring("G930", getprop("ro.boot.bootloader")),
		(
			if
				file_getprop("/tmp/aroma/kernel.prop","kernel") == "stock"
				then
					ui_print("Installing SM-G930F full StockKernel...");
					package_extract_file("superman/kernel/stocks7.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
					set_progress(0.650000);
					ui_print(" ");
			endif;
			if
				file_getprop("/tmp/aroma/kernel.prop","kernel") == "super"
				then
					ui_print("Installing SM-G930F SuperKernel...");
					package_extract_file("superman/kernel/superkernels7.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
					set_progress(0.650000);
					ui_print(" ");
			endif;
			if
				file_getprop("/tmp/aroma/kernel.prop","kernel") == "superstock"
				then
					ui_print("Installing SM-G930F SuperStock...");
					package_extract_file("superman/kernel/superstocks7.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
					set_progress(0.650000);
					ui_print(" ");
			endif;
			if
				file_getprop("/tmp/aroma/kernel.prop","recovery") == "update"
				then
					ui_print("Installing latest TWRP 3.0.2-5 for herolte...");
					package_extract_file("superman/recovery/twrp-3.0.2-5-herolte.img", "/dev/block/platform/155a0000.ufs/by-name/RECOVERY");
					set_progress(0.650000);
					ui_print(" ");
			endif;
		),
		(
			if
				file_getprop("/tmp/aroma/kernel.prop","kernel") == "stock"
				then
					ui_print("Installing SM-G935F full StockKernel...");
					package_extract_file("superman/kernel/stocks7e.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
					set_progress(0.650000);
					ui_print(" ");
			endif;
			if
				file_getprop("/tmp/aroma/kernel.prop","kernel") == "super"
				then
					ui_print("Installing SM-G935F SuperKernel...");
					package_extract_file("superman/kernel/superkernels7e.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
					set_progress(0.650000);
					ui_print(" ");
			endif;
			if
				file_getprop("/tmp/aroma/kernel.prop","kernel") == "superstock"
				then
					ui_print("Installing SM-G935F SuperStock...");
					package_extract_file("superman/kernel/superstocks7e.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
					set_progress(0.650000);
					ui_print(" ");
			endif;
			if
				file_getprop("/tmp/aroma/kernel.prop","recovery") == "update"
				then
					ui_print("Installing latest TWRP 3.0.2-5 for hero2lte...");
					package_extract_file("superman/recovery/twrp-3.0.2-5-hero2lte.img", "/dev/block/platform/155a0000.ufs/by-name/RECOVERY");
					set_progress(0.650000);
					ui_print(" ");
			endif;
		)
);
if
	file_getprop("/tmp/aroma/kernel.prop","recovery") == "keep"
	then
		ui_print("Keep current recovery version");
		set_progress(0.650000);
		ui_print(" ");
endif;
#-- SuperSU
if
	file_getprop("/tmp/aroma/magisk.prop","root") == "su"
	then
		ui_print("Installing SuperSU V2.79 SR3 variant...");
		package_extract_dir("superman/root", "/tmp/root");
		run_program("/sbin/busybox", "unzip", "/tmp/root/SuperSU-v2.79-SR3.zip", "META-INF/com/google/android/*", "-d", "/tmp/root");
		run_program("/sbin/busybox", "sh", "/tmp/root/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/root/SuperSU-v2.79-SR3.zip");
#SUD
		set_metadata_recursive("/system/su.d", "uid", 0, "gid", 0, "dmode", 0700, "fmode", 0700, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
		set_progress(0.750000);
		ui_print(" ");
endif;
#-- Magisk
if
	file_getprop("/tmp/aroma/magisk.prop","magisk") == "yes"
	then
		ui_print("Installing Magisk V11.1 for systemless mods...");
		package_extract_dir("superman/magisk", "/temp/magisk");
		run_program("/sbin/busybox", "unzip", "/temp/magisk/Magisk-v11.1.zip", "META-INF/com/google/android/*", "-d", "/temp/magisk");
		run_program("/sbin/busybox", "sh", "/temp/magisk/META-INF/com/google/android/update-binary", "dummy", "1", "/temp/magisk/Magisk-v11.1.zip");
		set_progress(0.800000);
		ui_print(" ");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","magisk") == "no"
	then
		ui_print("No magisk installed...");
		set_progress(0.800000);
		ui_print(" ");
endif;
#-- Root
if
	file_getprop("/tmp/aroma/magisk.prop","root") == "phh"
	then
		ui_print("Installing phh's root r275...");
		package_extract_dir("superman/root", "/temp/root");
		run_program("/sbin/busybox", "unzip", "/temp/root/superuser-r275.zip", "META-INF/com/google/android/*", "-d", "/temp/root");
		run_program("/sbin/busybox", "sh", "/temp/root/META-INF/com/google/android/update-binary", "dummy", "1", "/temp/root/superuser-r275.zip");
		set_progress(0.850000);
		ui_print(" ");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","root") == "no"
	then
		ui_print("No root installed");
		set_progress(0.850000);
		ui_print(" ");
endif;
#-- Busybox
if
	file_getprop("/tmp/aroma/magisk.prop","busybox") == "yes"
	then
		ui_print("Installing Busybox...");
		package_extract_dir("superman/busybox", "/tmp/busybox");
		run_program("/sbin/busybox", "unzip", "/tmp/busybox/UPDATE-Busybox.Installer.v1.26.2-ALL-signed.zip", "META-INF/com/google/android/*", "-d", "/tmp/busybox");
		run_program("/sbin/busybox", "sh", "/tmp/busybox/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/busybox/UPDATE-Busybox.Installer.v1.26.2-ALL-signed.zip");
		set_progress(0.900000);
		ui_print(" ");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","busybox") == "no"
	then
		ui_print("No Busybox installed...");
		set_progress(0.900000);
		ui_print(" ");
endif;
#-- Viper4Android
if
	file_getprop("/tmp/aroma/magisk.prop","v4a") == "yes"
	then
		ui_print("Installing ViPERAtmos_4.8_Sony_Beats_Universal_Edition...");
		package_extract_dir("superman/viper4android", "/tmp/viper4android");
		run_program("/sbin/busybox", "unzip", "/tmp/viper4android/ViPERAtmos_4.8_Sony_Beats_Universal_Edition.zip", "META-INF/com/google/android/*", "-d", "/tmp/viper4android");
		run_program("/sbin/busybox", "sh", "/tmp/viper4android/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/viper4android/ViPERAtmos_4.8_Sony_Beats_Universal_Edition.zip");
		set_progress(0.950000);
		ui_print(" ");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","v4a") == "yesma"
	then
		ui_print("Installing Magisk Viper4Android...");
		package_extract_dir("superman/viper4android", "/temp/viper4android");
		run_program("/sbin/busybox", "unzip", "/temp/viper4android/ViPER4Android_FX-v2.5.0.5.zip", "META-INF/com/google/android/*", "-d", "/temp/viper4android");
		run_program("/sbin/busybox", "sh", "/temp/viper4android/META-INF/com/google/android/update-binary", "dummy", "1", "/temp/viper4android/ViPER4Android_FX-v2.5.0.5.zip");
		set_progress(0.950000);
		ui_print(" ");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","v4a") == "dap"
	then
		ui_print("Installing Dolby Atmos...");
		package_extract_dir("superman/viper4android", "/temp/viper4android");
		run_program("/sbin/busybox", "unzip", "/temp/viper4android/dap_r6.5.zip", "META-INF/com/google/android/*", "-d", "/temp/viper4android");
		run_program("/sbin/busybox", "sh", "/temp/viper4android/META-INF/com/google/android/update-binary", "dummy", "1", "/temp/viper4android/dap_r6.5.zip");
		set_progress(0.950000);
		ui_print(" ");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","v4a") == "no"
	then
		ui_print("No SoundMod installed...");
		set_progress(0.950000);
		ui_print(" ");
endif;
#-- Param
if
	file_getprop("/tmp/aroma/cpandbl.prop","bootloader") == "update"
	then
		ifelse(
			is_substring("G930F", getprop("ro.boot.bootloader")),
				(
					ui_print(" ");
					ui_print("Flashing latest DQB7 G930F/FD param file");
					assert(package_extract_file("superman/bootloader/s7/param.bin", "/dev/block/sda4"));
					ui_print(" ");
				),
				(
				ifelse(
					is_substring("G935F", getprop("ro.boot.bootloader")),
						(
							ui_print(" ");
							ui_print("Flashing latest DQB7 G935F/FD param file");
							assert(package_extract_file("superman/bootloader/s7e/param.bin", "/dev/block/sda4"));
							ui_print(" ");
						),
						(
							ui_print(" ");
							ui_print("Your model does not yet support Nougat BL.");
							ui_print(" ");
						)
				);
				)
		);
endif;
#-- Splash Screen
ifelse(
	is_substring("G930", getprop("ro.boot.bootloader")),
		(
			if
				file_getprop("/tmp/aroma/bootanim.prop","splash") == "stock"
				then
					ui_print(" ");
					ui_print("Installing S7 Stock Splash...");
					package_extract_dir("superman/splash", "/tmp/splash");
					run_program("/sbin/busybox", "unzip", "/tmp/splash/splashstock-930.zip", "META-INF/com/google/android/*", "-d", "/tmp/splash");
					run_program("/sbin/busybox", "sh", "/tmp/splash/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/splash/splashstock-930.zip");
					set_progress(0.990000);
					ui_print(" ");
			endif;
			if
				file_getprop("/tmp/aroma/bootanim.prop","splash") == "super_black"
				then
					ui_print(" ");
					ui_print("Installing S7 SuperMan Splash...");
					package_extract_dir("superman/splash", "/tmp/splash");
					run_program("/sbin/busybox", "unzip", "/tmp/splash/splashblack-930.zip", "META-INF/com/google/android/*", "-d", "/tmp/splash");
					run_program("/sbin/busybox", "sh", "/tmp/splash/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/splash/splashblack-930.zip");
					set_progress(0.990000);
					ui_print(" ");
			endif;
			if
				file_getprop("/tmp/aroma/bootanim.prop","splash") == "nothing"
				then
					ui_print(" ");
					ui_print("Keep current Splash screen");
					ui_print(" ");
					set_progress(0.990000);
			endif;
		),
		(
			if
				file_getprop("/tmp/aroma/bootanim.prop","splash") == "stock"
				then
					ui_print(" ");
					ui_print("Installing S7 Edge Stock Splash...");
					package_extract_dir("superman/splash", "/tmp/splash");
					run_program("/sbin/busybox", "unzip", "/tmp/splash/splashstock-935.zip", "META-INF/com/google/android/*", "-d", "/tmp/splash");
					run_program("/sbin/busybox", "sh", "/tmp/splash/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/splash/splashstock-935.zip");
					set_progress(0.990000);
					ui_print(" ");
			endif;
			if
				file_getprop("/tmp/aroma/bootanim.prop","splash") == "super_black"
				then
					ui_print(" ");
					ui_print("Installing S7 Edge SuperMan Splash...");
					package_extract_dir("superman/splash", "/tmp/splash");
					run_program("/sbin/busybox", "unzip", "/tmp/splash/splashblack-935.zip", "META-INF/com/google/android/*", "-d", "/tmp/splash");
					run_program("/sbin/busybox", "sh", "/tmp/splash/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/splash/splashblack-935.zip");
					set_progress(0.990000);
					ui_print(" ");
			endif;
			if
				file_getprop("/tmp/aroma/bootanim.prop","splash") == "nothing"
				then
					ui_print(" ");
					ui_print("Keep current Splash screen");
					set_progress(0.990000);
					ui_print(" ");
			endif;
		)
);
#-- Aroma Backup
ui_print(" ");
ui_print("Backing Up aroma config");
ui_print(" ");
package_extract_file("scripts/saveconfig.sh", "/tmp/saveconfig.sh");
set_perm(0, 0, 0777, "/tmp/saveconfig.sh");
run_program("/tmp/saveconfig.sh");
#-- Modem
if
	file_getprop("/tmp/aroma/cpandbl.prop","modem") == "update"
	then
		ifelse(
			is_substring("G930F", getprop("ro.boot.bootloader")),
				(
					ui_print(" ");
					ui_print("Flashing latest DQB1 G930F/FD Modem");
					assert(package_extract_file("superman/modem/s7/modem.bin", "/dev/block/sda8"));
					assert(package_extract_file("superman/modem/s7/modem_debug.bin", "/dev/block/sda17"));
					ui_print(" ");
				),
				(
				ifelse(
					is_substring("G935F", getprop("ro.boot.bootloader")),
						(
							ui_print(" ");
							ui_print("Flashing latest DQB1 G935F/FD Modem");
							assert(package_extract_file("superman/modem/s7e/modem.bin", "/dev/block/sda8"));
							assert(package_extract_file("superman/modem/s7e/modem_debug.bin", "/dev/block/sda17"));
							ui_print(" ");
						),
						(
							ui_print(" ");
							ui_print("Your model is not supported yet on nougat, no CP update");
							ui_print(" ");
						)
				);
				)
		);
endif;
if
	file_getprop("/tmp/aroma/cpandbl.prop","modem") == "keep"
	then
		ui_print("Don't update Modem");
endif;
ui_print(" ");
ui_print("Wiping dalvik and tmp");
ui_print(" ");
delete_recursive("/temp");
delete_recursive("/data/dalvik-cache");
ui_print("Umounting Partitions");
ifelse(is_mounted("/system"), unmount("/system"));
ifelse(is_mounted("/data"), unmount("/data"));
ifelse(is_mounted("/cache"), unmount("/cache"));
ifelse(is_mounted("/preload"), unmount("/preload"));
ifelse(is_mounted("/efs"), unmount("/efs"));
set_progress(1.000000);
ui_print(" ");
ui_print("SuperMan-Rom Installed");
ui_print(" ");
endif;
#-- Bootloader
if
	file_getprop("/tmp/aroma/cpandbl.prop","bootloader") == "update"
	then
		ifelse(
			is_substring("G930F", getprop("ro.boot.bootloader")),
				(
					ui_print(" ");
					ui_print("Flashing latest DQB3 G930F/FD BL");
					assert(package_extract_file("superman/bootloader/s7/sboot.bin", "/dev/block/sda1"));
					sleep(1);
					assert(package_extract_file("superman/bootloader/s7/cm.bin", "/dev/block/sda2"));
					sleep(1);
					ui_print(" ");
					run_program("/sbin/reboot", "fota_bl");
				),
				(
				ifelse(
					is_substring("G935F", getprop("ro.boot.bootloader")),
						(
							ui_print(" ");
							ui_print("Flashing latest DQB3 G935F/FD BL");
							assert(package_extract_file("superman/bootloader/s7e/sboot.bin", "/dev/block/sda1"));
							sleep(1);
							assert(package_extract_file("superman/bootloader/s7e/cm.bin", "/dev/block/sda2"));
							sleep(1);
							ui_print(" ");
							run_program("/sbin/reboot", "fota_bl");
						),
						(
							ui_print(" ");
							ui_print("Your model does not yet support Nougat BL.");
							ui_print(" ");
						)
				);
				)
		);
endif;
if
	file_getprop("/tmp/aroma/cpandbl.prop","bootloader") == "keep"
	then
		ui_print(" ");
		ui_print("Don't update the Bootloader");
		ui_print(" ");
endif;
ui_print("Please Reboot now");
